//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Arrow_Fuse_UI"",
            ""id"": ""36eb042b-4b11-44d0-b222-9e68e0872973"",
            ""actions"": [
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""220b753f-6ef9-4f44-96d4-a68fdec0e98d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sort"",
                    ""type"": ""Button"",
                    ""id"": ""e4e789d0-f146-4b5e-ba69-07b4492b3e49"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Search"",
                    ""type"": ""Value"",
                    ""id"": ""f853cdc2-eff5-4efb-8d85-cfe7ceedd785"",
                    ""expectedControlType"": ""Dpad"",
                    ""processors"": """",
                    ""interactions"": ""PressAndRepeat(repeatTime=0.15,press=true)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FavoriteToggle"",
                    ""type"": ""Button"",
                    ""id"": ""54240df8-5219-4733-b9c2-2cdf6894d40a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuSearch"",
                    ""type"": ""Value"",
                    ""id"": ""45ca94e4-7f2a-4202-9e04-d0d14b18709c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SubMenuSearch"",
                    ""type"": ""Value"",
                    ""id"": ""9343201d-b4fd-46a0-8ad6-f52b840f3567"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""21e3bc82-afb3-4025-ab25-ed8558cf5239"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2054b196-ebea-4c8c-be54-649204da6ce0"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""FavoriteToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9363ac1-383e-42d3-9187-22a859c5f0a7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Sort"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""0d80c2d3-559c-4bb5-9694-315438eabc17"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Search"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b8cc8fae-14c6-45de-be91-4fb09fd73df8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Search"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""9746971d-773c-410e-8e8e-902564ee339c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Search"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""5c7a691a-e47c-477a-aa78-89310313f80c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuSearch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a3dabe50-d713-4cea-b38f-697e4cea8274"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""MenuSearch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b2ccd703-cc85-4d60-b394-773f3740787f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""MenuSearch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""68a71c69-d260-40a7-b40e-09dac8dd6695"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SubMenuSearch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b5a7f519-45a5-446d-8f76-fce1ecece2b7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SubMenuSearch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0cdf8c0a-29af-41bd-bfe0-7a668e83e66a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SubMenuSearch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""PlayerAction"",
            ""id"": ""79f7b3ec-07fc-4d66-a0f2-ed0b4267d760"",
            ""actions"": [
                {
                    ""name"": ""Option1"",
                    ""type"": ""Button"",
                    ""id"": ""b258818d-f7bb-46bb-be33-34877b06ea46"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option2"",
                    ""type"": ""Button"",
                    ""id"": ""618a21e2-a2bc-4ef0-99de-543e0d0fcf1e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""13084dc9-f609-4f4c-a4ab-74d0ed1fefbd"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Option1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e195c1c4-14f0-4a8b-833b-c5ee756c8e40"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Option2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Arrow_Fuse_UI
        m_Arrow_Fuse_UI = asset.FindActionMap("Arrow_Fuse_UI", throwIfNotFound: true);
        m_Arrow_Fuse_UI_Back = m_Arrow_Fuse_UI.FindAction("Back", throwIfNotFound: true);
        m_Arrow_Fuse_UI_Sort = m_Arrow_Fuse_UI.FindAction("Sort", throwIfNotFound: true);
        m_Arrow_Fuse_UI_Search = m_Arrow_Fuse_UI.FindAction("Search", throwIfNotFound: true);
        m_Arrow_Fuse_UI_FavoriteToggle = m_Arrow_Fuse_UI.FindAction("FavoriteToggle", throwIfNotFound: true);
        m_Arrow_Fuse_UI_MenuSearch = m_Arrow_Fuse_UI.FindAction("MenuSearch", throwIfNotFound: true);
        m_Arrow_Fuse_UI_SubMenuSearch = m_Arrow_Fuse_UI.FindAction("SubMenuSearch", throwIfNotFound: true);
        // PlayerAction
        m_PlayerAction = asset.FindActionMap("PlayerAction", throwIfNotFound: true);
        m_PlayerAction_Option1 = m_PlayerAction.FindAction("Option1", throwIfNotFound: true);
        m_PlayerAction_Option2 = m_PlayerAction.FindAction("Option2", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        UnityEngine.Debug.Assert(!m_Arrow_Fuse_UI.enabled, "This will cause a leak and performance issues, PlayerControls.Arrow_Fuse_UI.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerAction.enabled, "This will cause a leak and performance issues, PlayerControls.PlayerAction.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Arrow_Fuse_UI
    private readonly InputActionMap m_Arrow_Fuse_UI;
    private List<IArrow_Fuse_UIActions> m_Arrow_Fuse_UIActionsCallbackInterfaces = new List<IArrow_Fuse_UIActions>();
    private readonly InputAction m_Arrow_Fuse_UI_Back;
    private readonly InputAction m_Arrow_Fuse_UI_Sort;
    private readonly InputAction m_Arrow_Fuse_UI_Search;
    private readonly InputAction m_Arrow_Fuse_UI_FavoriteToggle;
    private readonly InputAction m_Arrow_Fuse_UI_MenuSearch;
    private readonly InputAction m_Arrow_Fuse_UI_SubMenuSearch;
    public struct Arrow_Fuse_UIActions
    {
        private @PlayerControls m_Wrapper;
        public Arrow_Fuse_UIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Back => m_Wrapper.m_Arrow_Fuse_UI_Back;
        public InputAction @Sort => m_Wrapper.m_Arrow_Fuse_UI_Sort;
        public InputAction @Search => m_Wrapper.m_Arrow_Fuse_UI_Search;
        public InputAction @FavoriteToggle => m_Wrapper.m_Arrow_Fuse_UI_FavoriteToggle;
        public InputAction @MenuSearch => m_Wrapper.m_Arrow_Fuse_UI_MenuSearch;
        public InputAction @SubMenuSearch => m_Wrapper.m_Arrow_Fuse_UI_SubMenuSearch;
        public InputActionMap Get() { return m_Wrapper.m_Arrow_Fuse_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Arrow_Fuse_UIActions set) { return set.Get(); }
        public void AddCallbacks(IArrow_Fuse_UIActions instance)
        {
            if (instance == null || m_Wrapper.m_Arrow_Fuse_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Arrow_Fuse_UIActionsCallbackInterfaces.Add(instance);
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @Sort.started += instance.OnSort;
            @Sort.performed += instance.OnSort;
            @Sort.canceled += instance.OnSort;
            @Search.started += instance.OnSearch;
            @Search.performed += instance.OnSearch;
            @Search.canceled += instance.OnSearch;
            @FavoriteToggle.started += instance.OnFavoriteToggle;
            @FavoriteToggle.performed += instance.OnFavoriteToggle;
            @FavoriteToggle.canceled += instance.OnFavoriteToggle;
            @MenuSearch.started += instance.OnMenuSearch;
            @MenuSearch.performed += instance.OnMenuSearch;
            @MenuSearch.canceled += instance.OnMenuSearch;
            @SubMenuSearch.started += instance.OnSubMenuSearch;
            @SubMenuSearch.performed += instance.OnSubMenuSearch;
            @SubMenuSearch.canceled += instance.OnSubMenuSearch;
        }

        private void UnregisterCallbacks(IArrow_Fuse_UIActions instance)
        {
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @Sort.started -= instance.OnSort;
            @Sort.performed -= instance.OnSort;
            @Sort.canceled -= instance.OnSort;
            @Search.started -= instance.OnSearch;
            @Search.performed -= instance.OnSearch;
            @Search.canceled -= instance.OnSearch;
            @FavoriteToggle.started -= instance.OnFavoriteToggle;
            @FavoriteToggle.performed -= instance.OnFavoriteToggle;
            @FavoriteToggle.canceled -= instance.OnFavoriteToggle;
            @MenuSearch.started -= instance.OnMenuSearch;
            @MenuSearch.performed -= instance.OnMenuSearch;
            @MenuSearch.canceled -= instance.OnMenuSearch;
            @SubMenuSearch.started -= instance.OnSubMenuSearch;
            @SubMenuSearch.performed -= instance.OnSubMenuSearch;
            @SubMenuSearch.canceled -= instance.OnSubMenuSearch;
        }

        public void RemoveCallbacks(IArrow_Fuse_UIActions instance)
        {
            if (m_Wrapper.m_Arrow_Fuse_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IArrow_Fuse_UIActions instance)
        {
            foreach (var item in m_Wrapper.m_Arrow_Fuse_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Arrow_Fuse_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Arrow_Fuse_UIActions @Arrow_Fuse_UI => new Arrow_Fuse_UIActions(this);

    // PlayerAction
    private readonly InputActionMap m_PlayerAction;
    private List<IPlayerActionActions> m_PlayerActionActionsCallbackInterfaces = new List<IPlayerActionActions>();
    private readonly InputAction m_PlayerAction_Option1;
    private readonly InputAction m_PlayerAction_Option2;
    public struct PlayerActionActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActionActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Option1 => m_Wrapper.m_PlayerAction_Option1;
        public InputAction @Option2 => m_Wrapper.m_PlayerAction_Option2;
        public InputActionMap Get() { return m_Wrapper.m_PlayerAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActionActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Add(instance);
            @Option1.started += instance.OnOption1;
            @Option1.performed += instance.OnOption1;
            @Option1.canceled += instance.OnOption1;
            @Option2.started += instance.OnOption2;
            @Option2.performed += instance.OnOption2;
            @Option2.canceled += instance.OnOption2;
        }

        private void UnregisterCallbacks(IPlayerActionActions instance)
        {
            @Option1.started -= instance.OnOption1;
            @Option1.performed -= instance.OnOption1;
            @Option1.canceled -= instance.OnOption1;
            @Option2.started -= instance.OnOption2;
            @Option2.performed -= instance.OnOption2;
            @Option2.canceled -= instance.OnOption2;
        }

        public void RemoveCallbacks(IPlayerActionActions instance)
        {
            if (m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActionActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActionActions @PlayerAction => new PlayerActionActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IArrow_Fuse_UIActions
    {
        void OnBack(InputAction.CallbackContext context);
        void OnSort(InputAction.CallbackContext context);
        void OnSearch(InputAction.CallbackContext context);
        void OnFavoriteToggle(InputAction.CallbackContext context);
        void OnMenuSearch(InputAction.CallbackContext context);
        void OnSubMenuSearch(InputAction.CallbackContext context);
    }
    public interface IPlayerActionActions
    {
        void OnOption1(InputAction.CallbackContext context);
        void OnOption2(InputAction.CallbackContext context);
    }
}
